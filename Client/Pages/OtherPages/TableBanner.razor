<div class="container-fluid">
    <div class="row">
        <div class="col-lg-2 cursorStyle">
            <div class="card border-primary">
                <div class="card-header ">
                    <i class="bi bi-people text-primary"></i>
                    Employee
                    <span class="badge bg-primary fs-6">@Employees.Count()</span>
                </div>
            </div>
        </div>
        <div class="col-lg-2 cursorStyle">
            <div class="card border-success" @onclick=VacationClicked>
                <div class="card-header "><i class="bi bi-backpack3 text-success"></i>
                    Vacation
                    <span class="badge bg-success fs-6">@Vacations.Count()</span>
                </div>
            </div>
        </div>
        <div class="col-lg-2 cursorStyle">
            <div class="card border-danger" @onclick=OverTimeClicked>
                <div class="card-header "><i class="bi bi-stopwatch text-danger"></i>
                    OverTime
                    <span class="badge bg-danger fs-6">@OverTimes.Count()</span>

                </div>
            </div>
        </div>
        <div class="col-lg-2 cursorStyle">
            <div class="card border-warning" @onclick=HealthClicked>
                <div class="card-header "><i class="bi bi-hospital text-warning"></i>
                    Health
                    <span class="badge bg-warning fs-6">@Health.Count()</span>
                 </div>
            </div>
        </div>
        <div class="col-lg-2 cursorStyle">
            <div class="card border-info" @onclick=SanctionClicked>
                <div class="card-header "><i class="bi bi-x-ocragon text-info"></i>
                    Sanctions
                    <span class="badge bg-info fs-6">@Sanctions.Count()</span>

                </div>
            </div>
        </div>
        <div class="col-lg-2 cursorStyle">
            <div class="card border-dark">
                <div class="card-header ">
                    <i class="bi bi-slack text-dark"></i>
                    Departments
                    <span class="badge bg-dark fs-6">@Departments.Count()</span>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .cursorStyle{
        cursor:pointer
    }
</style>

@code{
    public List<Employee> Employees { get; set; } = new();
    public List<Department> Departments { get; set; } = new();
    public List<Vacation> Vacations { get; set; } = new();
    public List<Sanction> Sanctions { get; set; } = new();
    public List<OverTime> OverTimes { get; set; } = new();
    public List<Doctor> Health { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        allState.Action += StateHasChanged;
        await LoadDefault();
    }
    private async Task LoadDefault()
    {
        Employees = await employeeService.GetAll(Constants.EmployeeBaseUrl);
        Departments = await departmentService.GetAll(Constants.DepartmentBaseUrl);
        Vacations = await vacationService.GetAll(Constants.VacationBaseUrl);
        Sanctions = await sanctionService.GetAll(Constants.SanctionBaseUrl);
        OverTimes = await overTimeService.GetAll(Constants.OverTimeBaseUrl);
        Health = await doctorService.GetAll(Constants.DoctorBaseUrl);
    }
    void OverTimeClicked() => allState.ShowOverTimeClicked();
    void SanctionClicked() => allState.ShowSanctionClicked();
    void VacationClicked() => allState.ShowVacationClicked();
    void HealthClicked() => allState.ShowHealthClicked();

}

