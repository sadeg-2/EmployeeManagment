@implements IDisposable
@if (allState.ShowEmployee)
{
    if (ShowAddOrUpdateEmployee)
    {
        <div class="container">
            <div class="row mt-5">
                <div class="col-log-1 text-center">
                    <i class="bi bi-x-lg fs-3 fw-bold text-danger" style="cursor:pointer" @onclick=CloseForm></i>
                </div>
                <div class="col-lg-6 text-center">
                    <h2>Add Employee</h2>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 mt-2 mb-5 d-flex justify-content-center">
                    <div class="hstack">
                        @if (FirstLayer)
                        {
                            <div class="@FloatingNumber1 text-center">1</div>
                            <div class="@FloatingDiv1 format-border"></div>
                            <div class="@FloatingNumber2 text-center">2</div>
                            <div class="@FloatingDiv2 format-border"></div>
                        }
                        @if (SecondLayer)
                        {
                            <div class="@FloatingNumber1 text-center">1</div>
                            <div class="@FloatingDiv1 format-border"></div>
                            <div class="@FloatingNumber2 text-center">2</div>
                            <div class="@FloatingDiv2 format-border"></div>
                        }
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="container-fluid">
                        @if (FirstLayer)
                        {
                            <EditForm Enhance Model="EmployeeGroup1" OnValidSubmit="Form1">
                                <DataAnnotationsValidator />
                                <div class="row">
                                    <div class="col-lg-2"></div>
                                    <div class="col-lg-4">
                                        <div class="card-title mb-5 fw-bold " style="font-family:Tahoma">Personal Information</div>
                                        <div class="card-body">
                                            <div class="form-group">
                                                <label class="form-label">Full Name</label>
                                                <InputText class="form-control" @bind-Value="EmployeeGroup1.Name" />
                                                <ValidationMessage For="()=> EmployeeGroup1.Name" class="text-danger" />
                                            </div>
                                            <div class="form-group">
                                                <label class="form-label">Telephone Number</label>
                                                <InputText class="form-control" @bind-Value="EmployeeGroup1.TelephoneNumber" />
                                                <ValidationMessage For="()=> EmployeeGroup1.TelephoneNumber" class="text-danger" />
                                            </div>
                                            <div class="form-group">
                                                <label class="form-label">Address</label>
                                                <InputText class="form-control" @bind-Value="EmployeeGroup1.Address" />
                                                <ValidationMessage For="()=> EmployeeGroup1.Address" class="text-danger" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 mt-2">
                                        <div class="card-title mb-5 fw-bold " style="font-family:Tahoma">Other Information</div>
                                        <div class="form-group">
                                            <label class="form-label">Address</label>
                                            <InputText class="form-control" @bind-Value=EmployeeGroup1.CivilId />
                                            <ValidationMessage For="()=> EmployeeGroup1.Address" class="text-danger" />
                                        </div>
                                        <div class="form-group">
                                            <label class="form-label">File Number</label>
                                            <InputText class="form-control" @bind-Value=EmployeeGroup1.FileNumber />
                                            <ValidationMessage For="()=> EmployeeGroup1.FileNumber" class="text-danger" />
                                        </div>
                                        <div class="form-group">
                                            <label class="form-label">Photo</label>
                                            <InputText class="form-control" @bind-Value=EmployeeGroup1.Photo />
                                            <ValidationMessage For="()=> EmployeeGroup1.Photo" class="text-danger" />
                                        </div>
                                        <div class="form-group mt-5">
                                            <button class="btn btn-primary float-end mt-4 mb-5" type="submit">
                                                <i class="bi bi-arrow-right"></i>
                                                Next
                                            </button>
                                        </div>
                                    </div>
                                    <div class="col-lg-2"></div>
                                </div>
                            </EditForm>
                        }
                        @if (SecondLayer)
                        {
                            <EditForm Enhance Model="EmployeeGroup2" OnValidSubmit="Form2">
                                <DataAnnotationsValidator />
                                <div class="row">
                                    <div class="col-lg-2"></div>
                                    <div class="col-lg-4">
                                        <div class="card-title mb-5 fw-bold " style="font-family:Tahoma">Job Information</div>
                                        <div class="card-body">
                                            <div class="form-group">
                                                <label class="form-label">Job Name</label>
                                                <InputText class="form-control" @bind-Value="EmployeeGroup2.JobName" />
                                                <ValidationMessage For="()=> EmployeeGroup2.JobName" class="text-danger" />
                                            </div>
                                            <div class="form-group">
                                                <label class="form-label">Telephone Number</label>
                                                <InputText class="form-control" @bind-Value="EmployeeGroup1.TelephoneNumber" />
                                                <ValidationMessage For="()=> EmployeeGroup1.TelephoneNumber" class="text-danger" />
                                            </div>
                                            <div class="form-group mt-3">
                                                <label class="form-label"></label>
                                                <label class="form-label">@(GeneralDepartmentName == "" ? "Select General Department" : $"Selected General Department{GeneralDepartmentName}")</label>
                                                <SfDropDownList TValue="string" TItem="GeneralDepartment" Placeholder="Select Department" DataSource="GeneralDepartments">
                                                    <DropDownListFieldSettings Value="Id" Text="Name" />
                                                    <DropDownListEvents TValue="string" TItem="GeneralDepartment" ValueChange="OnGeneralDepartmentValueChange"></DropDownListEvents>
                                                </SfDropDownList>
                                            </div>
                                            <div class="form-group mt-3">
                                                <label class="form-label"></label>
                                                <label class="form-label">@(DepartmentName == "" ? "Select Department" : $"Selected Department{DepartmentName}")</label>
                                                <SfDropDownList TValue="string" TItem="Department" Placeholder="Select Department" DataSource="Departments">
                                                    <DropDownListFieldSettings Value="Id" Text="Name" />
                                                    <DropDownListEvents TValue="string" TItem="Department" ValueChange="OnDepartmentValueChange"></DropDownListEvents>
                                                </SfDropDownList>
                                            </div>
                                            <div class="form-group mt-3">
                                                <label class="form-label"></label>
                                                <label class="form-label">@(Employee.Branch is null ? "Select Branch" : $"Selected Branch{Employee.Branch.Name!}")</label>
                                                <SfDropDownList TValue="string" TItem="Branch" Placeholder="Select Branch" DataSource="Branches">
                                                    <DropDownListFieldSettings Value="Id" Text="Name" />
                                                    <DropDownListEvents TValue="string" TItem="Branch" ValueChange="OnBranchValueChange"></DropDownListEvents>
                                                </SfDropDownList>
                                                <ValidationMessage For="()=> EmployeeGroup2.BranchId" class="text-danger    "></ValidationMessage>
                                            </div>
                                            <div class="form-group mt-5">
                                                <button class="btn btn-primary float-end mt-4 mb-5" type="button" @onclick="PrevClicked">
                                                    <i class="bi bi-arrow-left"></i>
                                                    Prev
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 mt-2">
                                        <div class="card-title mb-5 fw-bold " style="font-family:Tahoma">Location Information</div>
                                        <div class="form-group mt-3">
                                            <label class="form-label"></label>
                                            <label class="form-label">@(CountryName == "" ? "Select Country" : $"Selected Country {CountryName}")</label>
                                            <SfDropDownList TValue="string" TItem="Country" Placeholder="Select Country" DataSource="Countries">
                                                <DropDownListFieldSettings Value="Id" Text="Name" />
                                                <DropDownListEvents TValue="string" TItem="Country" ValueChange="OnCountryValueChange"></DropDownListEvents>
                                            </SfDropDownList>
                                        </div>
                                        <div class="form-group mt-3">
                                            <label class="form-label"></label>
                                            <label class="form-label">@(CityName == "" ? "Select City" : $"Selected City{CityName}")</label>
                                            <SfDropDownList TValue="string" TItem="City" Placeholder="Select City" DataSource="Cities">
                                                <DropDownListFieldSettings Value="Id" Text="Name" />
                                                <DropDownListEvents TValue="string" TItem="City" ValueChange="OnCityValueChange"></DropDownListEvents>
                                            </SfDropDownList>
                                        </div>
                                        <div class="form-group mt-3">
                                            <label class="form-label"></label>
                                            <label class="form-label">@(Employee.Town is null ? "Select Town" : $"Selected Town{Employee.Town.Name!}")</label>
                                            <SfDropDownList TValue="string" TItem="Town" Placeholder="Select Town" DataSource="Towns">
                                                <DropDownListFieldSettings Value="Id" Text="Name" />
                                                <DropDownListEvents TValue="string" TItem="Town" ValueChange="OnTownValueChange"></DropDownListEvents>
                                            </SfDropDownList>
                                            <ValidationMessage For="()=> EmployeeGroup2.TownId" class="text-danger"></ValidationMessage>
                                        </div>
                                        <div class="form-group mt-3">
                                            <label class="form-label">Other</label>
                                            <textarea @bind="EmployeeGroup2.Other" class="form-control" placeholder="Optional" />
                                        </div>
                                        <div class="form-group mt-5">
                                            <button class="btn btn-primary float-end" type="submit">
                                                <i class="bi bi-save"></i>
                                                Save
                                            </button>
                                        </div>
                                    </div>
                                    <div class="col-lg-2"></div>
                                </div>
                            </EditForm>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
}

<style>
    .floatingDiv {
        width: 500px;
        background: #228ada;
        height: 10px;
    }

    .floatingNumber {
        width: 20px;
        background: #1d1858;
        height: 20px;
        color: white;
        border-radius: 50%;
    }

    .inactive-div {
        width: 500px;
        background: gray;
        height: 10px;
    }

    .inactive-span {
        width: 20px;
        background: gray;
        height: 20px;
        color: white;
        border-radius: 50%;
    }

    .format-border {
        border-radius: 20px;
    }
</style>
@code {
    [Parameter] public bool ShowAddOrUpdateEmployee { get; set; } = false;

    [Parameter] public EventCallback NotifyParentFromCloseClicked { get; set; }
    [Parameter] public EmployeeGroup1 EmployeeGroup1 { get; set; } = new();
    [Parameter] public EmployeeGroup2 EmployeeGroup2 { get; set; } = new();

    [Parameter] public List<Country> Countries { get; set; } = new();
    [Parameter] public List<City> Cities { get; set; } = new();
    [Parameter] public List<Town> Towns { get; set; } = new();

    [Parameter] public List<GeneralDepartment> GeneralDepartments { get; set; } = new();
    [Parameter] public List<Department> Departments { get; set; } = new();
    [Parameter] public List<Branch> Branches { get; set; } = new();

    [Parameter] public Employee Employee { get; set; } = new();

    string GeneralDepartmentName = "";
    string DepartmentName = "";

    string CountryName = "";
    string CityName = "";

    string FloatingNumber1 = "floatingNumber";
    string FloatingDiv1 = "floatingDiv";

    string FloatingNumber2 = "inactive-span";
    string FloatingDiv2 = "inactive-div";

    public bool FirstLayer { get; set; } = true;
    public bool SecondLayer { get; set; } = false;

    private void ShowLayer2()
    {
        FirstLayer = false;
        SecondLayer = true;
    }
    private void PrevClicked()
    {
        FirstLayer = true;
        SecondLayer = false;
    }

    public async Task CloseForm()
    {

        ShowAddOrUpdateEmployee = false;
        await NotifyParentFromCloseClicked.InvokeAsync();
    }
    public void Dispose()
    {
        allState.Action -= StateHasChanged;
    }
    protected async override Task OnInitializedAsync()
    {
        allState.Action = StateHasChanged;
    }


    // Country , City , Town

    [Parameter] public EventCallback<int> HandleCountySelected { get; set; }
    public void OnCountryValueChange(ChangeEventArgs<string, Country> args)
    {
        HandleCountySelected.InvokeAsync(int.Parse(args.Value));
    }

    [Parameter] public EventCallback<int> HandleCitySelected { get; set; }
    public void OnCityValueChange(ChangeEventArgs<string, City> args)
    {
        HandleCitySelected.InvokeAsync(int.Parse(args.Value));
    }

    public void OnTownValueChange(ChangeEventArgs<string, Town> args)
    {
        EmployeeGroup2.TownId = int.Parse(args.Value);
    }
    

    // General Dep / Dep / Branch
    [Parameter] public EventCallback<int> HandleGeneralDepartmentSelected { get; set; }
    public void OnGeneralDepartmentValueChange(ChangeEventArgs<string, GeneralDepartment> args)
    {
        HandleGeneralDepartmentSelected.InvokeAsync(int.Parse(args.Value));
    }

    [Parameter] public EventCallback<int> HandleDepartmentSelected { get; set; }
    public void OnDepartmentValueChange(ChangeEventArgs<string, Department> args)
    {
        HandleDepartmentSelected.InvokeAsync(int.Parse(args.Value));
    }

    public void OnBranchValueChange(ChangeEventArgs<string, Branch> args)
    {
        EmployeeGroup2.BranchId =  int.Parse(args.Value);
    }

    void Form1(){}
    void Form2(){}
}